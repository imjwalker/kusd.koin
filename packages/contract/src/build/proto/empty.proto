syntax = "proto3";

package empty;

import "koinos/options.proto"; 

message str {
   string value = 1;
}

message uint64 {
   uint64 value = 1;
}

message kusd_koin_vaultbalances {
   uint64 koin = 1 [jstype = JS_STRING];
   uint64 kusd_koin = 2 [jstype = JS_STRING];
}

message kusd_koin_protocol_balances {
   repeated kusd_koin_vaultbalances kvb = 1;
}

message get_vault_args {
   bytes owner = 1 [(koinos.btype) = ADDRESS];
}

message list_args {
   bytes start = 1 [(koinos.btype) = ADDRESS];
   int32 limit = 2;
   direction direction = 3;
}

message addresses {
   repeated bytes accounts = 1 [(koinos.btype) = ADDRESS];
}

enum direction {
   ascending = 0;
   descending = 1;
}

message deposit_args {
   bytes account = 1 [(koinos.btype) = ADDRESS];
   uint64 amount = 2 [jstype = JS_STRING];
}

message withdraw_args {
   bytes account = 1 [(koinos.btype) = ADDRESS];
   uint64 amount = 2 [jstype = JS_STRING];
}

message mint_args {
   bytes account = 1 [(koinos.btype) = ADDRESS];
   uint64 amount = 2 [jstype = JS_STRING];
}

message repay_args {
   bytes account = 1 [(koinos.btype) = ADDRESS];
   uint64 amount = 2 [jstype = JS_STRING];
}

message liquidate_args {
   bytes account = 1 [(koinos.btype) = ADDRESS];
   bytes vault = 2 [(koinos.btype) = ADDRESS];
}

message ratio_args {
   
}

message ratio_result {
   string k_last = 1;
   uint64 token_a = 2 [jstype = JS_STRING];
   uint64 token_b = 3 [jstype = JS_STRING];
   uint64 block_time = 4 [jstype = JS_STRING];
}

message get_price_args {
  bytes token_address = 1 [(koinos.btype) = CONTRACT_ID];
}

message price_object {
  uint64 price = 1 [jstype = JS_STRING];
  uint64 timestamp = 2 [jstype = JS_STRING];
}
